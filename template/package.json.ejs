{
  "name": <%- json(name) %>,
  "version": "1.0.0",
  "description": <%- json(description) %>,
  "author": <%- json(author + (email ? ` <${email}>` : '')) %>,
  "license": "MIT",
  "homepage": <%- json(docs ? githubPage : repository) %>,
  "repository": <%- json(repository) %>,
  "bugs": <%- json(repository + "/issues") %>,
  "main": "dist/index.js"<% if (module) { %>,
  "module": "dist/module.jsm"<% } if (typescript) { %>,
  "types": "dist/types.d.ts"<% } if (browser) { %>,
  "browser": "dist/browser.js"<% } %>,
  "files": [
    "dist"
  ],
  "scripts": {<% if (typescript) { %>
    "build": "run-p build:*",
    "build:javascript": "env-cmd rollup -c",
    "build:types": "tsc --outFile dist/types.d.ts --declaration --emitDeclarationOnly --sourceMap --declarationMap"<% } else { %>
    "build": "env-cmd rollup -c"<% } if (docs) { %>,
    "docs": "run-s docs:clear docs:build",
    "docs:dev": "run-p docs:watch docs:serve"<% if (typescript) { %>,
    "docs:build": "typedoc src"<% } else { %>,
    "docs:build": "jsdoc -c jsdoc.config.json"<% } %>,
    "docs:clear": "rm -Rf docs/*"<% if (typescript) { %>,
    "docs:watch": "watch 'yarn docs:build' src"<% } else { %>,
    "docs:watch": "watch 'yarn docs:build' src tutorials"<% } %>,
    "docs:serve": "serve docs"<% } if (lint) { %>,
    "lint": "eslint src/**/*"<% } if (test) { %>,
    "test": "jest -c jest.config.json"<% if (codeclimate) { %>,
    "test:report": "run-s test:report:before test test:report:after",
    "test:report:before": "env-cmd cc-test-reporter before-build",
    "test:report:after": "env-cmd cc-test-reporter after-build"<% } } %>
  }<% if (githooks) { %>,
  "husky": {
    "hooks": {
      "pre-commit": "run-s build<%- test ? ' test' : '' %><%- docs ? ' docs' : ''%> && git add src dist<%- docs ? ' docs' : ''%>"
    }
  }<% } %>,
  "devDependencies": {<% if (typescript) { %>
    "typescript": "3.5.1",
    "rollup-plugin-typescript2": "^0.21.0"<% if (test) { %>,
    "@types/jest": "^24.0.13",
    "ts-jest": "^24.0.2"<% } } else { %>
    "@babel/core": "^7.2.2",
    "@babel/plugin-proposal-class-properties": "^7.3.0",
    "@babel/plugin-proposal-decorators": "^7.4.4",
    "@babel/preset-env": "^7.3.1",
    "babel-plugin-module-resolver": "^3.2.0",
    "rollup-plugin-babel": "^4.3.2"<% } if (lint) { if (typescript) { %>,
    "@typescript-eslint/eslint-plugin": "^1.8.0",
    "@typescript-eslint/parser": "^1.8.0"<% } else { %>,
    "babel-eslint": "^10.0.1"<% } %>,
    "eslint": "^5.12.1",
    "rollup-plugin-eslint": "^5.1.0"<% } if (test) { %>,
    "jest": "^24.0.0"<% } if (docs) { %>,
    "serve": "^11.0.0",
    "watch": "^1.0.2"<% if (typescript) { %>,
    "typedoc": "^0.14.2"<% } else { %>,
    "minami": "^1.2.3",
    "jsdoc": "^3.5.5",
    "jsdoc-inheritparams-plugin": "^1.0.5",
    "jsdoc-override-keeps-meta-plugin": "^1.0.1",
    "jsdoc-this-type-plugin": "^1.0.3"<% } } %>,
    "env-cmd": "^9.0.1",
    "rollup": "^1.1.2"<% if (browser) { %>,
    "rollup-plugin-commonjs": "^9.2.0",
    "rollup-plugin-node-resolve": "^4.0.0",
    "rollup-plugin-terser": "^4.0.4"<% } %>,
    "yarn-run-all": "3.1.1"
  }
}
